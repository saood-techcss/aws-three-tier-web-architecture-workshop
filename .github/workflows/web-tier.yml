name: React App Build CI
# Trigger the workflow on push to the css-test branch
on:
  push:
    branches:
      - main
jobs:
  build:
    # Define a matrix strategy to run the job on multiple Node.js versions
    runs-on: ubuntu-latest
   
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v3
      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      # Step 3: Install npm dependencies
      - name: Install dependencies
        run: npm install
        working-directory: ./application-code/web-tier
        
     # Step 4: Build the React application
      - name: Build the application
        run: npm run build
        working-directory: ./application-code/web-tier

      # - name: List files in the root directory
      #   run: ls -la

      # - name: List files in the build directory
      #   run: ls -la ./build  # Confirm if the `build` folder exists
          
     # Step 5: Upload the build folder as an artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
           name: build-artifact
           path: application-code/web-tier/build
       
      # Step 6: Set up Java 17
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
           java-version: '17'
           distribution: 'temurin'  # Specify the Java distribution
    #    step 7: Run SonarCube scan
    #  - name: SonarQube scan
    #    run: |
    #      npx sonar-scanner \
    #        -Dsonar.projectKey=${{ secrets.PROJECT_KEY }} \
    #        -Dsonar.sources=src \
    #        -Dsonar.host.url=${{ secrets.HOST_URL }} \
    #        -Dsonar.login=${{ secrets.CSS_SONAR_TOKEN }}
 
